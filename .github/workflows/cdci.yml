name: Deploy Laravel Application to Production Server
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: ecommapp_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2

      - name: Install Composer Dependencies
        run: composer install --optimize-autoloader --no-dev --no-progress --no-interaction --prefer-dist

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build NPM Assets
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: ecommapp_test
          DB_USERNAME: root
          DB_PASSWORD: password
        run: npm run build

    # - name: Synchronize Files To Server
    #   uses: appleboy/scp-action@v0.1.1
    #   with:
    #     host: ${{ secrets.VPS_HOST }}
    #     username: ${{ secrets.VPS_USER }}
    #     password: ${{ secrets.VPS_PASSWORD }}
    #     source: "."
    #     target: "/var/www/html/ecomappprod/"

    # - name: Run Remote/Artisan Commands
    #   uses: appleboy/ssh-action@v0.1.6
    #   with:
    #     host: ${{ secrets.VPS_HOST }}
    #     username: ${{ secrets.VPS_USER }}
    #     password: ${{ secrets.VPS_PASSWORD }}
    #     script: |
    #   cd /var/www/html/ecomappprod
    #   sudo chown -R www-data:www-data /var/www/html/ecomappprod
    #   sudo chmod -R 775 /var/www/html/ecomappprod/storage
    #   sudo chmod -R 775 /var/www/html/ecomappprod/bootstrap/cache

    #   php artisan migrate --force
    #   php artisan optimize
    #   php artisan config:cache
    #   php artisan route:cache
    #   php artisan view:cache

  # php artisan migrate:fresh --seed --force
